#include<stdio.h>
#include<conio.h>
int G[100][100],parent[100],edges[100][100],k,a,b,u,v,w,min,mc=0;
int searchparent(int i)
{
	while(parent[i])
		i=parent[i];
	return i;
}
int cycle(int i,int j)
{
	if(i!=j)
	{	parent[j]=i;
		return 1;
	}
	return 0;
}
void main()
{
	int i,j;
	clrscr();
	printf("Enter the number of Vertices\n");
	scanf("%d",&v);
	for(i=1;i<=v;i++)
		parent[i]=0;
	for(i=1;i<=v;i++)
	{
		for(j=1;j<=v;j++)
		{   	if(i==j)
				G[i][j]=1000;
			else
			{
			printf("Enter the weight between %d %d if no edge then enter 1000 ",i,j);
			scanf("%d",&G[i][j]);
			}
		}
	}
	for(i=1;i<=v;i++)
	{
		for(j=1;j<=v;j++)
			{
				edges[i][j]=G[i][j];
			}
	}
	for(k=1;k<v;)
	{
		min=1000;
		for(i=1;i<=v;i++)
		{
			for(j=1;j<=v;j++)
			{
				if(edges[i][j]<min)
				{
					u=a=i;
					w=b=j;
					min=edges[i][j];
				}
			}
		}
		u=searchparent(u);
		w=searchparent(w);
		if(cycle(u,w))
		{
			printf("Edge (%d,%d) cost =%d\n",a,b,min);
			k++;
			mc=min+mc;
		}
		edges[a][b]=1000;
	}
	printf("final cost=%d",mc);
	getch();
}
/*
output:
F:\z>gcc KRU64.c -o KRU64
F:\z>.\KRU64
Enter the number of Vertices
5
Enter the weight between 1 2 if no edge then enter 1000 1
Enter the weight between 1 3 if no edge then enter 1000 3
Enter the weight between 1 4 if no edge then enter 1000 1000
Enter the weight between 1 5 if no edge then enter 1000 1000
Enter the weight between 2 1 if no edge then enter 1000 1000
Enter the weight between 2 3 if no edge then enter 1000 3
Enter the weight between 2 4 if no edge then enter 1000 6
Enter the weight between 2 5 if no edge then enter 1000 1000
Enter the weight between 3 1 if no edge then enter 1000 3
Enter the weight between 3 2 if no edge then enter 1000 1000
Enter the weight between 3 4 if no edge then enter 1000 4
Enter the weight between 3 5 if no edge then enter 1000 2
Enter the weight between 4 1 if no edge then enter 1000 1000
Enter the weight between 4 2 if no edge then enter 1000 1000
Enter the weight between 4 3 if no edge then enter 1000 1000
Enter the weight between 4 5 if no edge then enter 1000 5
Enter the weight between 5 1 if no edge then enter 1000 1000
Enter the weight between 5 2 if no edge then enter 1000 1000
Enter the weight between 5 3 if no edge then enter 1000 1000
Enter the weight between 5 4 if no edge then enter 1000 1000
Edge (1,2) cost =1
Edge (3,5) cost =2
Edge (1,3) cost =3
Edge (3,4) cost =4
final cost=10
F:\z>
*/
